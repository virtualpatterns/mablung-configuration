{"version":3,"sources":["../../../source/test/library/configuration.test.js"],"names":["Path","Test","Configuration","Require","_createRequire","import","meta","url","test","is","get","configuration","load","false","has","resolve","forEach","loadFileName0","loadFileName1","relative","dirname","merge","loadFileName","mergeFileName","true","undefined","set","option0","option1","option2","option4","getOption","a","b","c","parameter0","parameter1","parameter2","actualValue","getParameter","expectedValue","log","length","deepEqual","object","actualValue0","redact","expectedValue0","actualValue1","expectedValue1","actualValue2","expectedValue2","omit"],"mappings":"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","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\n\nimport { Configuration } from '../../index.js'\n\n// const FilePath = __filePath\n// const FolderPath = Path.dirname(FilePath)\nconst Require = __require // __require is replaced by @virtualpatterns/mablung-babel-plugin-replace\n\nTest('Configuration(object)', (test) => {\n  test.is((new Configuration({ 'a': 1 })).get('a'), 1)\n})\n\nTest('Configuration.load(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.load({ 'b' : 2 })\n\n  test.false(configuration.has('a'))\n  test.is(configuration.get('b'), 2)\n\n})\n\n;[\n  [ Require.resolve('./resource/configuration/load/path/load0.js'), Require.resolve('./resource/configuration/load/path/load1.js') ],\n  [ Require.resolve('./resource/configuration/load/path/load0.json'), Require.resolve('./resource/configuration/load/path/load1.json') ],\n  [ Require.resolve('./resource/configuration/load/path/load0.json5'), Require.resolve('./resource/configuration/load/path/load1.json5') ],\n  [ Require.resolve('./resource/configuration/load/path/load2.js'), Require.resolve('./resource/configuration/load/path/load3.js') ]\n].forEach(([ loadFileName0, loadFileName1 ]) => {\n\n  Test(`Configuration.load('${Path.relative(Path.dirname(loadFileName0), loadFileName0)}'), Configuration.load('${Path.relative(Path.dirname(loadFileName1), loadFileName1)}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(loadFileName0)\n    await configuration.load(loadFileName1)\n  \n    test.false(configuration.has('a'))\n    test.is(configuration.get('b'), 2)\n  \n  })\n\n})\n\nTest('Configuration.merge(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.merge({ 'b' : 2 })\n\n  test.is(configuration.get('a'), 1)\n  test.is(configuration.get('b'), 2)\n\n})\n\n;[\n  [ Require.resolve('./resource/configuration/merge/path/load.js'), Require.resolve('./resource/configuration/merge/path/merge.js') ],\n  [ Require.resolve('./resource/configuration/merge/path/load.json'), Require.resolve('./resource/configuration/merge/path/merge.json') ],\n  [ Require.resolve('./resource/configuration/merge/path/load.json5'), Require.resolve('./resource/configuration/merge/path/merge.json5') ]\n].forEach(([ loadFileName, mergeFileName ]) => {\n\n  Test(`Configuration.load('${Path.relative(Path.dirname(loadFileName), loadFileName)}'), Configuration.merge('${Path.relative(Path.dirname(mergeFileName), mergeFileName)}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(loadFileName)\n    await configuration.merge(mergeFileName)\n  \n    test.is(configuration.get('a'), 1)\n    test.is(configuration.get('b'), 2)\n  \n  })\n\n\n})\n\nTest('Configuration.has(string)', (test) => {\n  test.true((new Configuration({ 'a': 1 })).has('a'))\n})\n\nTest('Configuration.get(string[, defaultValue])', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n\n  test.is(configuration.get('a'), 1)\n  test.is(configuration.get('b', 0), 0)\n  test.is(configuration.get('c'), undefined)\n\n})\n\nTest('Configuration.set(string, value)', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  configuration.set('b', 2)\n\n  test.is(configuration.get('b', 0), 2)\n\n})\n\nTest('Configuration.getOption(option0, option1, option2)', (test) => {\n\n  let option0 = { 'a': 1 }\n  let option1 = { 'b': 2 }\n  let option2 = { 'a': false, 'c': 3 }\n\n  let option4 = Configuration.getOption(option0, option1, option2)\n\n  test.false(option4.a)\n  test.is(option4.b, 2)\n  test.is(option4.c, 3)\n\n})\n\nTest('Configuration.getParameter(parameter0, parameter1, parameter2)', (test) => {\n\n  let parameter0 = { 'a': '1' }\n  let parameter1 = [ 'b', 'c' ]\n  let parameter2 = { 'd': '4', 'c': '5' }\n\n  let actualValue = Configuration.getParameter(parameter0, parameter1, parameter2)\n  let expectedValue = [ 'a', '1', 'b', 'c', '5', 'd', '4' ]\n\n  test.log(actualValue)\n\n  test.is(actualValue.length, 7)\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.getParameter({ \\'a\\': 0 })', (test) => {\n\n  let parameter0 = { 'a': 0 }\n\n  let actualValue = Configuration.getParameter(parameter0)\n  let expectedValue = [ 'a', 0 ]\n\n  test.is(actualValue.length, 2)\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.getParameter({ \\'a\\': 1 })', (test) => {\n\n  let parameter0 = { 'a': 1 }\n\n  let actualValue = Configuration.getParameter(parameter0)\n  let expectedValue = [ 'a', 1 ]\n\n  test.is(actualValue.length, 2)\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.redact(object, string[, string])', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.redact(object, 'a.b')\n  let expectedValue0 = { 'a': { 'b': '**********', 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n  let actualValue1 = Configuration.redact(object, 'a.b', 0)\n  let expectedValue1 = { 'a': { 'b': 0, 'c': 3 } }\n\n  test.deepEqual(actualValue1, expectedValue1)\n\n  let actualValue2 = object\n  let expectedValue2 = { 'a': { 'b': 2, 'c': 3 } }\n\n  test.deepEqual(actualValue2, expectedValue2)\n\n})\n\nTest('Configuration.omit(object, string)', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.omit(object, 'a.b')\n  let expectedValue0 = { 'a': { 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n})\n"],"file":"configuration.test.js"}