{"version":3,"sources":["../../../source/test/library/configuration.test.js"],"names":["Test","Configuration","Require","_createRequire","import","meta","url","test","configuration","value","get","is","load","hasValue","has","false","forEach","loadFileName0","loadFileName1","resolve","merge","value0","value1","loadFileName","mergeFileName","true","value2","undefined","set","option0","option1","option2","option4","getOption","a","b","c","parameter0","parameter1","parameter2","actualValue","getParameter","expectedValue","length","deepEqual","object","actualValue0","redact","expectedValue0","actualValue1","expectedValue1","actualValue2","expectedValue2","omit"],"mappings":"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","sourcesContent":["import Test from 'ava'\n\nimport { Configuration } from '../../index.js'\n\nconst Require = __require // __require is replaced by @virtualpatterns/mablung-babel-plugin-replace\n\nTest('Configuration(object)', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  let value = configuration.get('a')\n\n  test.is(value, 1, 'value of \\'a\\' is not 1')\n\n})\n\nTest('Configuration.load(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.load({ 'b' : 2 })\n\n  let hasValue = configuration.has('a')\n  let value = configuration.get('b')\n\n  test.false(hasValue, '\\'a\\' exists')\n  test.is(value, 2, 'value of \\'b\\' is not 2')\n\n})\n\n;[\n  [ 'load0.js', 'load1.js' ],\n  [ 'load0.json', 'load1.json' ],\n  [ 'load0.json5', 'load1.json5' ]\n].forEach(([ loadFileName0, loadFileName1 ]) => {\n\n  Test(`Configuration.load('${loadFileName0}'), Configuration.load('${loadFileName1}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(Require.resolve(`./resource/configuration/load/path/${loadFileName0}`))\n    await configuration.load(Require.resolve(`./resource/configuration/load/path/${loadFileName1}`))\n\n    let hasValue = configuration.has('a')\n    let value = configuration.get('b')\n  \n    test.false(hasValue, '\\'a\\' exists')\n    test.is(value, 2, 'value of \\'b\\' is not 2')\n  \n  })\n\n})\n\nTest('Configuration.merge(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.merge({ 'b' : 2 })\n\n  let value0 = configuration.get('a')\n  let value1 = configuration.get('b')\n\n  test.is(value0, 1, 'value of \\'a\\' is not 1')\n  test.is(value1, 2, 'value of \\'b\\' is not 2')\n\n})\n\n;[\n  [ 'load.js', 'merge.js' ],\n  [ 'load.json', 'merge.json' ],\n  [ 'load.json5', 'merge.json5' ]\n].forEach(([ loadFileName, mergeFileName ]) => {\n\n  Test(`Configuration.load('${loadFileName}'), Configuration.merge('${mergeFileName}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(Require.resolve(`./resource/configuration/merge/path/${loadFileName}`))\n    await configuration.merge(Require.resolve(`./resource/configuration/merge/path/${mergeFileName}`))\n\n    let value0 = configuration.get('a')\n    let value1 = configuration.get('b')\n  \n    test.is(value0, 1, 'value of \\'a\\' is not 1')\n    test.is(value1, 2, 'value of \\'b\\' is not 2')\n  \n  })\n\n\n})\n\nTest('Configuration.has(string)', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  let hasValue = configuration.has('a')\n\n  test.true(hasValue, '\\'a\\' does not exist')\n\n})\n\nTest('Configuration.get(string[, defaultValue])', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n\n  let value0 = configuration.get('a')\n  let value1 = configuration.get('b', 0)\n  let value2 = configuration.get('c')\n\n  test.is(value0, 1, 'value of \\'a\\' is not 1')\n  test.is(value1, 0, 'value of \\'b\\' is not 0')\n  test.is(value2, undefined, 'value of \\'c\\' is not undefined')\n\n})\n\nTest('Configuration.set(string, value)', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  configuration.set('b', 2)\n\n  let value0 = configuration.get('b', 0)\n\n  test.is(value0, 2, 'value of \\'b\\' is not 2')\n\n})\n\nTest('Configuration.getOption(option0, option1, option2)', (test) => {\n\n  let option0 = { 'a': 1 }\n  let option1 = { 'b': 2 }\n  let option2 = { 'a': false, 'c': 3 }\n\n  let option4 = Configuration.getOption(option0, option1, option2)\n\n  test.false(option4.a, 'value of \\'a\\' is not false')\n  test.is(option4.b, 2, 'value of \\'b\\' is not 2')\n  test.is(option4.c, 3, 'value of \\'c\\' is not 3')\n\n})\n\nTest('Configuration.getParameter(parameter0, parameter1, parameter2)', (test) => {\n\n  let parameter0 = { 'a': '1' }\n  let parameter1 = [ 'b', 'c' ]\n  let parameter2 = { 'd': '4', 'c': '5' }\n\n  let actualValue = Configuration.getParameter(parameter0, parameter1, parameter2)\n  let expectedValue = [ 'a', '1', 'b', 'c', '5', 'd', '4' ]\n\n  test.is(actualValue.length, 7, 'parameter length is not 7')\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.redact(object, string[, string])', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.redact(object, 'a.b')\n  let expectedValue0 = { 'a': { 'b': '**********', 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n  let actualValue1 = Configuration.redact(object, 'a.b', 0)\n  let expectedValue1 = { 'a': { 'b': 0, 'c': 3 } }\n\n  test.deepEqual(actualValue1, expectedValue1)\n\n  let actualValue2 = object\n  let expectedValue2 = { 'a': { 'b': 2, 'c': 3 } }\n\n  test.deepEqual(actualValue2, expectedValue2)\n\n})\n\nTest('Configuration.omit(object, string)', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.omit(object, 'a.b')\n  let expectedValue0 = { 'a': { 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n})\n"],"file":"configuration.test.js"}