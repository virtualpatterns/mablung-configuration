{"version":3,"sources":["../../../source/test/library/configuration.test.js"],"names":["Test","Configuration","Require","_createRequire","import","meta","url","test","is","get","configuration","load","false","has","forEach","loadFileName0","loadFileName1","only","resolve","merge","loadFileName","mergeFileName","true","undefined","set","option0","option1","option2","option4","getOption","a","b","c","parameter0","parameter1","parameter2","actualValue","getParameter","expectedValue","length","deepEqual","object","actualValue0","redact","expectedValue0","actualValue1","expectedValue1","actualValue2","expectedValue2","omit"],"mappings":"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","sourcesContent":["import Test from 'ava'\n\nimport { Configuration } from '../../index.js'\n\nconst Require = __require // __require is replaced by @virtualpatterns/mablung-babel-plugin-replace\n\nTest('Configuration(object)', (test) => {\n  test.is((new Configuration({ 'a': 1 })).get('a'), 1)\n})\n\nTest('Configuration.load(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.load({ 'b' : 2 })\n\n  test.false(configuration.has('a'))\n  test.is(configuration.get('b'), 2)\n\n})\n\n;[\n  // [ 'load0.js', 'load1.js' ],\n  // [ 'load0.json', 'load1.json' ],\n  // [ 'load0.json5', 'load1.json5' ],\n  [ 'load2.js', 'load3.js' ]\n].forEach(([ loadFileName0, loadFileName1 ]) => {\n\n  Test.only(`Configuration.load('${loadFileName0}'), Configuration.load('${loadFileName1}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(Require.resolve(`./resource/configuration/load/path/${loadFileName0}`))\n    await configuration.load(Require.resolve(`./resource/configuration/load/path/${loadFileName1}`))\n  \n    test.false(configuration.has('a'))\n    test.is(configuration.get('b'), 2)\n  \n  })\n\n})\n\nTest('Configuration.merge(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.merge({ 'b' : 2 })\n\n  test.is(configuration.get('a'), 1)\n  test.is(configuration.get('b'), 2)\n\n})\n\n;[\n  [ 'load.js', 'merge.js' ],\n  [ 'load.json', 'merge.json' ],\n  [ 'load.json5', 'merge.json5' ]\n].forEach(([ loadFileName, mergeFileName ]) => {\n\n  Test(`Configuration.load('${loadFileName}'), Configuration.merge('${mergeFileName}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(Require.resolve(`./resource/configuration/merge/path/${loadFileName}`))\n    await configuration.merge(Require.resolve(`./resource/configuration/merge/path/${mergeFileName}`))\n  \n    test.is(configuration.get('a'), 1)\n    test.is(configuration.get('b'), 2)\n  \n  })\n\n\n})\n\nTest('Configuration.has(string)', (test) => {\n  test.true((new Configuration({ 'a': 1 })).has('a'))\n})\n\nTest('Configuration.get(string[, defaultValue])', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n\n  test.is(configuration.get('a'), 1)\n  test.is(configuration.get('b', 0), 0)\n  test.is(configuration.get('c'), undefined)\n\n})\n\nTest('Configuration.set(string, value)', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  configuration.set('b', 2)\n\n  test.is(configuration.get('b', 0), 2)\n\n})\n\nTest('Configuration.getOption(option0, option1, option2)', (test) => {\n\n  let option0 = { 'a': 1 }\n  let option1 = { 'b': 2 }\n  let option2 = { 'a': false, 'c': 3 }\n\n  let option4 = Configuration.getOption(option0, option1, option2)\n\n  test.false(option4.a)\n  test.is(option4.b, 2)\n  test.is(option4.c, 3)\n\n})\n\nTest('Configuration.getParameter(parameter0, parameter1, parameter2)', (test) => {\n\n  let parameter0 = { 'a': '1' }\n  let parameter1 = [ 'b', 'c' ]\n  let parameter2 = { 'd': '4', 'c': '5' }\n\n  let actualValue = Configuration.getParameter(parameter0, parameter1, parameter2)\n  let expectedValue = [ 'a', '1', 'b', 'c', '5', 'd', '4' ]\n\n  test.is(actualValue.length, 7)\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.redact(object, string[, string])', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.redact(object, 'a.b')\n  let expectedValue0 = { 'a': { 'b': '**********', 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n  let actualValue1 = Configuration.redact(object, 'a.b', 0)\n  let expectedValue1 = { 'a': { 'b': 0, 'c': 3 } }\n\n  test.deepEqual(actualValue1, expectedValue1)\n\n  let actualValue2 = object\n  let expectedValue2 = { 'a': { 'b': 2, 'c': 3 } }\n\n  test.deepEqual(actualValue2, expectedValue2)\n\n})\n\nTest('Configuration.omit(object, string)', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.omit(object, 'a.b')\n  let expectedValue0 = { 'a': { 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n})\n"],"file":"configuration.test.js"}