{"version":3,"sources":["../../../source/test/library/configuration.test.js"],"names":["Require","require","test","is","Configuration","get","configuration","load","false","has","resolve","forEach","loadFileName0","loadFileName1","Test","only","Path","relative","dirname","merge","loadFileName","mergeFileName","true","undefined","set","option0","option1","option2","option4","getOption","a","b","c","parameter0","parameter1","parameter2","actualValue","getParameter","expectedValue","log","length","deepEqual","object","actualValue0","redact","expectedValue0","actualValue1","expectedValue1","actualValue2","expectedValue2","omit"],"mappings":"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","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\n\nimport { Configuration } from '../../index.js'\n\n// const FilePath = __filePath\n// const FolderPath = Path.dirname(FilePath)\nconst Require = __require // __require is replaced by @virtualpatterns/mablung-babel-plugin-replace\n\nTest('Configuration(object)', (test) => {\n  test.is((new Configuration({ 'a': 1 })).get('a'), 1)\n})\n\nTest('Configuration.load(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.load({ 'b' : 2 })\n\n  test.false(configuration.has('a'))\n  test.is(configuration.get('b'), 2)\n\n})\n\n;[\n  [ Require.resolve('./resource/configuration/load/path/load0.js'), Require.resolve('./resource/configuration/load/path/load1.js') ],\n  [ Require.resolve('./resource/configuration/load/path/load0.json'), Require.resolve('./resource/configuration/load/path/load1.json') ],\n  [ Require.resolve('./resource/configuration/load/path/load0.json5'), Require.resolve('./resource/configuration/load/path/load1.json5') ],\n  [ Require.resolve('./resource/configuration/load/path/load2.js'), Require.resolve('./resource/configuration/load/path/load3.js') ]\n].forEach(([ loadFileName0, loadFileName1 ]) => {\n\n  Test.only(`Configuration.load('${Path.relative(Path.dirname(loadFileName0), loadFileName0)}'), Configuration.load('${Path.relative(Path.dirname(loadFileName1), loadFileName1)}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(loadFileName0)\n    await configuration.load(loadFileName1)\n  \n    test.false(configuration.has('a'))\n    test.is(configuration.get('b'), 2)\n  \n  })\n\n})\n\nTest('Configuration.merge(object)', async (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  await configuration.merge({ 'b' : 2 })\n\n  test.is(configuration.get('a'), 1)\n  test.is(configuration.get('b'), 2)\n\n})\n\n;[\n  [ Require.resolve('./resource/configuration/merge/path/load.js'), Require.resolve('./resource/configuration/merge/path/merge.js') ],\n  [ Require.resolve('./resource/configuration/merge/path/load.json'), Require.resolve('./resource/configuration/merge/path/merge.json') ],\n  [ Require.resolve('./resource/configuration/merge/path/load.json5'), Require.resolve('./resource/configuration/merge/path/merge.json5') ]\n].forEach(([ loadFileName, mergeFileName ]) => {\n\n  Test.only(`Configuration.load('${Path.relative(Path.dirname(loadFileName), loadFileName)}'), Configuration.merge('${Path.relative(Path.dirname(mergeFileName), mergeFileName)}')`, async (test) => {\n\n    let configuration = new Configuration()\n    await configuration.load(loadFileName)\n    await configuration.merge(mergeFileName)\n  \n    test.is(configuration.get('a'), 1)\n    test.is(configuration.get('b'), 2)\n  \n  })\n\n\n})\n\nTest('Configuration.has(string)', (test) => {\n  test.true((new Configuration({ 'a': 1 })).has('a'))\n})\n\nTest('Configuration.get(string[, defaultValue])', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n\n  test.is(configuration.get('a'), 1)\n  test.is(configuration.get('b', 0), 0)\n  test.is(configuration.get('c'), undefined)\n\n})\n\nTest('Configuration.set(string, value)', (test) => {\n\n  let configuration = new Configuration({ 'a': 1 })\n  configuration.set('b', 2)\n\n  test.is(configuration.get('b', 0), 2)\n\n})\n\nTest('Configuration.getOption(option0, option1, option2)', (test) => {\n\n  let option0 = { 'a': 1 }\n  let option1 = { 'b': 2 }\n  let option2 = { 'a': false, 'c': 3 }\n\n  let option4 = Configuration.getOption(option0, option1, option2)\n\n  test.false(option4.a)\n  test.is(option4.b, 2)\n  test.is(option4.c, 3)\n\n})\n\nTest('Configuration.getParameter(parameter0, parameter1, parameter2)', (test) => {\n\n  let parameter0 = { 'a': '1' }\n  let parameter1 = [ 'b', 'c' ]\n  let parameter2 = { 'd': '4', 'c': '5' }\n\n  let actualValue = Configuration.getParameter(parameter0, parameter1, parameter2)\n  let expectedValue = [ 'a', '1', 'b', 'c', '5', 'd', '4' ]\n\n  test.log(actualValue)\n\n  test.is(actualValue.length, 7)\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.getParameter({ \\'a\\': 0 })', (test) => {\n\n  let parameter0 = { 'a': 0 }\n\n  let actualValue = Configuration.getParameter(parameter0)\n  let expectedValue = [ 'a', 0 ]\n\n  test.is(actualValue.length, 2)\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.getParameter({ \\'a\\': 1 })', (test) => {\n\n  let parameter0 = { 'a': 1 }\n\n  let actualValue = Configuration.getParameter(parameter0)\n  let expectedValue = [ 'a', 1 ]\n\n  test.is(actualValue.length, 2)\n  test.deepEqual(actualValue, expectedValue)\n\n})\n\nTest('Configuration.redact(object, string[, string])', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.redact(object, 'a.b')\n  let expectedValue0 = { 'a': { 'b': '**********', 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n  let actualValue1 = Configuration.redact(object, 'a.b', 0)\n  let expectedValue1 = { 'a': { 'b': 0, 'c': 3 } }\n\n  test.deepEqual(actualValue1, expectedValue1)\n\n  let actualValue2 = object\n  let expectedValue2 = { 'a': { 'b': 2, 'c': 3 } }\n\n  test.deepEqual(actualValue2, expectedValue2)\n\n})\n\nTest('Configuration.omit(object, string)', (test) => {\n\n  let object = { 'a': { 'b': 2, 'c': 3 } }\n\n  let actualValue0 = Configuration.omit(object, 'a.b')\n  let expectedValue0 = { 'a': { 'c': 3 } }\n\n  test.deepEqual(actualValue0, expectedValue0)\n\n})\n"],"file":"configuration.test.cjs"}